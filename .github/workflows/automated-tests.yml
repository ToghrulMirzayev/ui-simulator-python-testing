name: Automated Tests
on: [repository_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS }}
          submodules: true
      - name: Pull submodule
        run: |
          git pull --recurse-submodules
          git submodule update --init --recursive --remote
      - name: Push changes
        run: |
          git config --global user.name 'ToghrulMirzayev'
          git config --global user.email 'togrul.mirzoev@gmail.com'
          git add .
          git commit -m "Auto trigger from submodule"
          git push
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Chrome
          run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f
      - name: Install ChromeDriver
        run: |
          LATEST=$(wget -q -O - https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/$LATEST/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          rm chromedriver_linux64.zip
      - name: Run Pytest with ChromeDriver
        run: |
          pytest
      - name: Install rsync ðŸ“š
        run: |
          sudo apt-get install rsync
      - name: Move Pyreport to Public Directory
        run: |
          mkdir public
          mv pyreport.html public/
      - name: Checkout (copy) gh-pages repository to GitHub runner
        uses: actions/checkout@v2
        if: always()
        with:
          ref: gh-pages
          path: ./.github/gh-pages

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: always()
        with:
          token: ${{ secrets.TOKEN_CI }}
          branch: gh-pages
          folder: public
          clean: true
